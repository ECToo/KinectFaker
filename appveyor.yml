version: 1.0.{build}
image: Visual Studio 2017
cache: c:\tools\vcpkg\installed\
configuration:
    #- Debug
    - Release
platform:
    - x86
    - x64
environment:
    matrix:
        - Toolset: v140
        - Toolset: v150
install:
    - git submodule init
    - git submodule update
    ############################################################################
      # All external dependencies are installed in C:\projects\deps
      ############################################################################
    - mkdir C:\projects\deps
    - cd C:\projects\deps
    # Kinect Headers
    - mkdir Headers
    - ps: appveyor DownloadFile 'https://gist.github.com/TinyTinni/2209b0baaec9ef1d61e729b757f9210f/archive/bee0361721a66856542274f59ad3ed733b8a9c43.zip' -FileName Headers.zip
    - 7z.exe e Headers.zip -o*
    
before_build:
- ps: |
    $generator = switch ($env:TOOLSET)
    {
        "v150" {"Visual Studio 15 2017"}
        "v140" {"Visual Studio 14 2015"}
        "v120" {"Visual Studio 12 2013"}
        "v110" {"Visual Studio 11 2012"}
        "v100" {"Visual Studio 10 2010"}
    }
    if ($env:PLATFORM -eq "x64")
    {
        $generator = "$generator Win64"
    }
    cd $env:APPVEYOR_BUILD_FOLDER
    $protobuf_install_name = "protobuf:$env:PLATFORM"+"-windows"
    vcpkg install $protobuf_install_name
    cmake --version
    md build -Force | Out-Null
    cd build 
    cmake -G "$generator" -DCMAKE_CONFIGURATION_TYPES="$env:CONFIGURATION" -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DKinectSDK_INCLUDE_DIRS="C:\projects\deps\Headers" -DBUILD_GUI=OFF -DBUILD_TESTS=ON -DCMAKE_CXX_FLAGS_DEBUG="/MTd" -DCMAKE_CXX_FLAGS_RELEASE="/MT" ..
build_script:
    - ps: cmake --build . --config $env:CONFIGURATION
    
test_script:
- ps: |
    $vcpkg_runtime_dir = "C:\tools\vcpkg\installed\$env:PLATFORM"+"-windows\bin"
    $vcpkg_runtime_dir
    $env:path += ";C:\projects\deps\runtime;vcpkg_runtime_dir"
    ctest -C $env:CONFIGURATION --output-on-failure
